//
//  LoginView.swift
//  iosApp
//
//  Created by Arkadiy Blank on 25.03.2025.
//  Copyright ¬© 2025 orgName. All rights reserved.
//

import SwiftUI

struct LoginView: View {
    @StateObject var viewModel = LoginViewModel()
    
    //@State private var isLoggedIn = false // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–æ–º
    
    var body: some View {
        VStack {
            if viewModel.isLoggedIn {
                //HomeScreen() // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º HomeScreen, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ª–æ–≥–∏–Ω–µ–Ω
                MainTabView() // üîÅ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ç–∞–±–∞–º –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ª–æ–≥–∏–Ω–∞
            } else {
                
                VStack(spacing: 16) {
                    TextField("Email", text: $viewModel.email)
                        .textFieldStyle(.roundedBorder)
                    
                    SecureField("Password", text: $viewModel.password)
                        .textFieldStyle(.roundedBorder)
                    
                    if viewModel.isLoading {
                        ProgressView("Logging in...")
                    } else {
                        Button("Login") {
                            Task {
                                await viewModel.onLoginClicked()
                            }
                        }
                        .buttonStyle(.borderedProminent)
                    }
                    
                    if let error = viewModel.errorMessage {
                        Text(error)
                            .foregroundColor(.red)
                    }
                    
                }
                .padding()
                //.onChange(of: viewModel.loginSuccess) { newValue in // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ loginSuccess
                  //  if newValue {
                    //    viewModel.isLoggedIn = true
                    //}
                //}
            }
        }
        .onAppear { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ LoginView
            viewModel.checkLoginState() // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏ –ø–æ—è–≤–ª–µ–Ω–∏–∏ LoginView
        }
    }
    
}


struct LoginView_Previews: PreviewProvider {
    static var previews: some View {
        LoginView()
    }
}
